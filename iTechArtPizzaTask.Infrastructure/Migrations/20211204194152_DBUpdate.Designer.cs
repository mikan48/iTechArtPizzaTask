// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iTechArtPizzaTask.Infrastructure.Context;

namespace iTechArtPizzaTask.Infrastructure.Migrations
{
    [DbContext(typeof(PizzaDeliveryContext))]
    [Migration("20211204194152_DBUpdate")]
    partial class DBUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.Ingridient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IngridientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PizzasIngridientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PizzasIngridientId");

                    b.ToTable("Ingridients");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("DeliveryMethod")
                        .HasColumnType("tinyint");

                    b.Property<string>("DestinationAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCommentary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OrderCost")
                        .HasColumnType("money");

                    b.Property<byte>("Payment")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("PromoCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PromoCodeId");

                    b.HasIndex("UserId1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.OrderedPizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("OrderedPizzas");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PizzaCost")
                        .HasColumnType("money");

                    b.Property<string>("PizzaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.PizzasIngridient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngridientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzasIngridients");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.PromoCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("PromoCodes");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.Ingridient", b =>
                {
                    b.HasOne("iTechArtPizzaTask.Core.Models.PizzasIngridient", null)
                        .WithMany("Ingridient")
                        .HasForeignKey("PizzasIngridientId");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.Order", b =>
                {
                    b.HasOne("iTechArtPizzaTask.Core.Models.PromoCode", null)
                        .WithMany("Orders")
                        .HasForeignKey("PromoCodeId");

                    b.HasOne("iTechArtPizzaTask.Core.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.OrderedPizza", b =>
                {
                    b.HasOne("iTechArtPizzaTask.Core.Models.Order", null)
                        .WithMany("OrderedPizzas")
                        .HasForeignKey("OrderId");

                    b.HasOne("iTechArtPizzaTask.Core.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.PizzasIngridient", b =>
                {
                    b.HasOne("iTechArtPizzaTask.Core.Models.Pizza", "Pizza")
                        .WithMany("PizzasIngridients")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.Order", b =>
                {
                    b.Navigation("OrderedPizzas");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.Pizza", b =>
                {
                    b.Navigation("PizzasIngridients");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.PizzasIngridient", b =>
                {
                    b.Navigation("Ingridient");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.PromoCode", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("iTechArtPizzaTask.Core.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
